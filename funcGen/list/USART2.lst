C51 COMPILER V9.60.0.0   USART2                                                            09/04/2020 23:36:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE USART2
OBJECT MODULE PLACED IN .\list\USART2.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE USART2.C LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\
                    -USART2.lst) TABS(2) OBJECT(.\list\USART2.obj)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          
  15          #include "USART2.h"
  16          
  17          
  18          COMx_Define COM2;
  19          u8  xdata TX2_Buffer[COM_TX2_Lenth];  //发送缓冲
  20          u8  xdata RX2_Buffer[COM_RX2_Lenth];  //接收缓冲
  21          
  22          static u8 USART_Configuration(u8 UARTx, COMx_InitDefine *COMx)
  23          {
  24   1        u8  i;
  25   1        u32 j;
  26   1        
  27   1        if(UARTx == USART2)
  28   1        {
  29   2          COM2.id = 2;
  30   2          COM2.TX_read    = 0;
  31   2          COM2.TX_write   = 0;
  32   2          COM2.B_TX_busy  = 0;
  33   2          COM2.RX_Cnt     = 0;
  34   2          COM2.RX_TimeOut = 0;
  35   2          COM2.B_RX_OK    = 0;
  36   2          for(i=0; i<COM_TX2_Lenth; i++)  TX2_Buffer[i] = 0;
  37   2          for(i=0; i<COM_RX2_Lenth; i++)  RX2_Buffer[i] = 0;
  38   2      
  39   2          if((COMx->UART_Mode == UART_9bit_BRTx) ||(COMx->UART_Mode == UART_8bit_BRTx)) //可变波特率
  40   2          {
  41   3            if(COMx->UART_Polity == PolityHigh)   IP2 |=  1;  //高优先级中断
  42   3            else                  IP2 &= ~1;  //低优先级中断
  43   3            if(COMx->UART_Mode == UART_9bit_BRTx) S2CON |=  (1<<7); //9bit
  44   3            else                  S2CON &= ~(1<<7); //8bit
  45   3            j = (MAIN_Fosc / 4) / COMx->UART_BaudRate;  //按1T计算
  46   3            if(j >= 65536UL)  return 2; //错误
  47   3            j = 65536UL - j;
  48   3            AUXR &= ~(1<<4);  //Timer stop
  49   3            AUXR &= ~(1<<3);  //Timer2 set As Timer
  50   3            AUXR |=  (1<<2);  //Timer2 set as 1T mode
  51   3            TH2 = (u8)(j>>8);
  52   3            TL2 = (u8)j;
  53   3            IE2  &= ~(1<<2);  //禁止中断
  54   3            AUXR |=  (1<<4);  //Timer run enable
C51 COMPILER V9.60.0.0   USART2                                                            09/04/2020 23:36:04 PAGE 2   

  55   3          }
  56   2          else  return 2; //模式错误
  57   2          if(COMx->UART_Interrupt == ENABLE)  IE2   |=  1;    //允许中断
  58   2          else                IE2   &= ~1;    //禁止中断
  59   2          if(COMx->UART_RxEnable == ENABLE) S2CON |=  (1<<4); //允许接收
  60   2          else                S2CON &= ~(1<<4); //禁止接收
  61   2          P_SW2 = (P_SW2 & ~1) | (COMx->UART_P_SW & 0x01);  //切换IO
  62   2        }
  63   1        return 0;
  64   1      }
  65          
  66          
  67          void TX2_write2buff(u8 dat) //写入发送缓冲，指针+1
  68          {
  69   1        TX2_Buffer[COM2.TX_write] = dat;  //装发送缓冲
  70   1        if(++COM2.TX_write >= COM_TX2_Lenth)  COM2.TX_write = 0;
  71   1      
  72   1        if(COM2.B_TX_busy == 0)   //空闲
  73   1        {  
  74   2          COM2.B_TX_busy = 1;   //标志忙
  75   2          SET_TI2();        //触发发送中断
  76   2        }
  77   1      }
  78          
  79          void PrintString2(u8 *puts)
  80          {
  81   1          for (; *puts != 0;  puts++)  TX2_write2buff(*puts);   //遇到停止符0结束
  82   1      }
  83          
  84          
  85          
  86          /********************* UART2中断函数************************/
  87          void UART2_int (void) interrupt UART2_VECTOR
  88          {
  89   1        if(RI2)
  90   1        {
  91   2          CLR_RI2();
  92   2          if(COM2.B_RX_OK == 0)
  93   2          {
  94   3            if(COM2.RX_Cnt >= COM_RX2_Lenth)  COM2.RX_Cnt = 0;
  95   3            RX2_Buffer[COM2.RX_Cnt++] = S2BUF;
  96   3            COM2.RX_TimeOut = TimeOutSet2;
  97   3          }
  98   2        }
  99   1      
 100   1        if(TI2)
 101   1        {
 102   2          CLR_TI2();
 103   2          if(COM2.TX_read != COM2.TX_write)
 104   2          {
 105   3            S2BUF = TX2_Buffer[COM2.TX_read];
 106   3            if(++COM2.TX_read >= COM_TX2_Lenth)   COM2.TX_read = 0;
 107   3          }
 108   2          else  COM2.B_TX_busy = 0;
 109   2        }
 110   1      
 111   1      }
 112          
 113          
 114          


C51 COMPILER V9.60.0.0   USART2                                                            09/04/2020 23:36:04 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    559    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    263       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
