C51 COMPILER V9.60.0.0   EXTERN_IO                                                         08/23/2020 16:20:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXTERN_IO
OBJECT MODULE PLACED IN extern_IO.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE extern_IO.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) DEBUG OBJECTEXTEND TA
                    -BS(2)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU International Limited ----------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   8          /* --- QQ:  800003751 -------------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了宏晶科技的资料及程序   */
  10          /*---------------------------------------------------------------------*/
  11          
  12          
  13          /*************  本程序功能说明  **************
  14          
  15          用STC的MCU的IO方式控制74HC595驱动8位数码管。
  16          
  17          用户可以修改宏来选择时钟频率.
  18          
  19          显示效果为: 左边为INT0(SW17)中断计数, 右边为INT1(SW18)中断计数, 计数范围为0~255.
  20          
  21          由于按键是机械按键, 按下有抖动, 而本例程没有去抖动处理, 所以按一次有多个计数也是正常的.
  22          
  23          ******************************************/
  24          
  25          #define MAIN_Fosc   24000000UL  //定义主时钟
  26          
  27          #include  "STC15Fxxxx.H"
  28          
  29          u8  INT0_cnt, INT1_cnt; //测试用的计数变量
  30          
  31          /********************** 主函数 ************************/
  32          void maintest2(void)
  33          {
  34   1        u8  i;
  35   1        
  36   1        P0M1 = 0; P0M0 = 0; //设置为准双向口
  37   1        P1M1 = 0; P1M0 = 0; //设置为准双向口
  38   1        P2M1 = 0; P2M0 = 0; //设置为准双向口
  39   1        P3M1 = 0; P3M0 = 0; //设置为准双向口
  40   1        P4M1 = 0; P4M0 = 0; //设置为准双向口
  41   1        P5M1 = 0; P5M0 = 0; //设置为准双向口
  42   1        P6M1 = 0; P6M0 = 0; //设置为准双向口
  43   1        P7M1 = 0; P7M0 = 0; //设置为准双向口  
  44   1        
  45   1        INT0_cnt = 0;
  46   1        INT1_cnt = 0;
  47   1      
  48   1        IE1  = 0; //外中断1标志位
  49   1        IE0  = 0; //外中断0标志位
  50   1        EX1 = 1;  //INT1 Enable
  51   1        EX0 = 1;  //INT0 Enable
  52   1      
  53   1        IT0 = 1;    //INT0 下降沿中断   
  54   1      //  IT0 = 0;    //INT0 上升,下降沿中断  
C51 COMPILER V9.60.0.0   EXTERN_IO                                                         08/23/2020 16:20:59 PAGE 2   

  55   1        IT1 = 1;    //INT1 下降沿中断   
  56   1      //  IT1 = 0;    //INT1 上升,下降沿中断  
  57   1        EA = 1;   //允许总中断
  58   1      
  59   1      } 
*** WARNING C280 IN LINE 34 OF extern_IO.c: 'i': unreferenced local variable
  60          
  61          /********************* INT0中断函数 *************************/
  62          void INT0_int (void) interrupt INT0_VECTOR    //进中断时已经清除标志
  63          {
  64   1        INT0_cnt++; //中断+1
  65   1      }
  66          
  67          /********************* INT1中断函数 *************************/
  68          void INT1_int (void) interrupt INT1_VECTOR    //进中断时已经清除标志
  69          {
  70   1        INT1_cnt++; //中断+1
  71   1      }
  72          /*
  73          
  74          
  75          static void driver(){
  76            if (encoderPos_ > 0){
  77              onPosSide_ = true;  
  78            } else {
  79              onPosSide_ = false;  
  80            }
  81          
  82            goingPosDirLast_ = goingPosDir_;
  83            if ((encoderPos_ - encoderPosLast_) > 0) {
  84              goingPosDir_ = true;  
  85            } else{
  86              goingPosDir_ = false;  
  87            }
  88          
  89            // we've changed directions
  90            if (goingPosDir_ != goingPosDirLast_) {
  91              peakSwing_ = abs(encoderPos_);
  92            }
  93          }
  94          //优先执行管理程序回调函数，然后执行用户回调函数
  95          // Interrupt on A changing state
  96          static void doEncoderA() {
  97            // Test transition
  98            A_set_ = digitalRead_supervised(encoderPinA) == HIGH;
  99            // and adjust counter + if A leads B
 100            encoderPosLast_ = encoderPos_;
 101            encoderPos_ += (A_set_ != B_set_) ? +1 : -1;
 102            
 103            driver();
 104            (*doEncoderA_user)();
 105          }
 106          
 107          // Interrupt on B changing state
 108          static void doEncoderB() {
 109            // Test transition
 110            B_set_ = digitalRead_supervised(encoderPinB) == HIGH;
 111            // and adjust counter + if B follows A
 112            encoderPosLast_ = encoderPos_;
 113            encoderPos_ += (A_set_ == B_set_) ? +1 : -1;
 114            
 115            driver();
C51 COMPILER V9.60.0.0   EXTERN_IO                                                         08/23/2020 16:20:59 PAGE 3   

 116            (*doEncoderB_user)();
 117          }
 118          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     58    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
